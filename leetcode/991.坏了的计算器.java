/**
 * 题目描述：
 *
 * 在显示着数字的坏计算器上，我们可以执行以下两种操作：
 *
 * 双倍（Double）：将显示屏上的数字乘 2；
 * 递减（Decrement）：将显示屏上的数字减 1 。
 * 最初，计算器显示数字 X。
 * 
 * 返回显示数字 Y 所需的最小操作数。
 *
 * 示例 1：
 *
 * 输入：X = 2, Y = 3
 * 输出：2
 * 解释：先进行双倍运算，然后再进行递减运算 {2 -> 4 -> 3}.
 * 示例 2：
 *
 * 输入：X = 5, Y = 8
 * 输出：2
 * 解释：先递减，再双倍 {5 -> 4 -> 8}.
 * 示例 3： 
 *
 * 输入：X = 3, Y = 10
 * 输出：3
 * 解释：先双倍，然后递减，再双倍 {3 -> 6 -> 5 -> 10}.
 * 示例 4：
 * 
 * 输入：X = 1024, Y = 1
 * 输出：1023
 * 解释：执行递减运算 1023 次
 *
 * 思路：
 *（1）分类讨论即可
 *（2）如果x>y ，只能进行减一操作， 所有return x-y
 *（3）如果x=y ，直接return 0
 *（4）如果x<y , 那么对y进行逆向递归即可，就是让y除二去靠近x，次数关系分为奇数和偶数
 */
class Solution {
    public int brokenCalc(int X, int Y) {
        if(X > Y){
            return X-Y;
        }
        else if(X == Y){
            return 0;
        }
        else{
            return Y%2==0 ? brokenCalc(X, Y/2)+1 : brokenCalc(X, (Y+1)/2)+2;
        }
    }
}